# Use PHP 8.2 FPM on Alpine Linux as the base image
FROM php:8.2-fpm-alpine

# Install system dependencies and libraries for required PHP extensions
RUN apk update && apk add --no-cache \
    bash \
    git \
    unzip \
    libpq-dev \
    libzip-dev \
    libpng-dev \
    libjpeg-turbo-dev \
    freetype-dev

# Configure and install PHP extensions: pdo, pdo_pgsql, gd, and zip
RUN docker-php-ext-install pdo pdo_pgsql

# Configure GD with support for JPEG, PNG, and FreeType
RUN docker-php-ext-configure gd \
      --with-freetype=/usr/include/ \
      --with-jpeg=/usr/include/ && \
    docker-php-ext-install gd

# Install the zip extension
RUN docker-php-ext-install zip

# Set the working directory
WORKDIR /var/www

# Copy the entire application code
COPY . .

# Ensure storage and cache directories are writable
RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache

# Install Composer
RUN apk add --no-cache curl && \
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Install PHP dependencies (now the autoload file can find custom_helpers.php)
RUN composer install --no-interaction --prefer-dist

# Expose the port for Laravel's development server
EXPOSE 8000

# Run Laravel's built-in development server on port 8000
CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
