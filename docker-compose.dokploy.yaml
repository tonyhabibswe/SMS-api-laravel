version: "3.8"

services:
  api-php:
    build:
      context: .
      dockerfile: Dockerfile.dokploy
    restart: always
    environment:
      APP_ENV: ${APP_ENV}
      APP_KEY: ${APP_KEY}
      APP_URL: ${APP_URL}
      API_HOST: ${API_HOST}
      APP_DEBUG: "false"

      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - storage:/var/www/storage
      - cache:/var/www/bootstrap/cache
    healthcheck:
      test: ["CMD-SHELL", "php -v >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks: [backend] # <-- explicit shared network

  api-web:
    image: nginx:alpine
    depends_on:
      api-php:
        condition: service_healthy # <-- wait for PHP-FPM to be healthy
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./public:/var/www/public:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`dev2-sms-api.codewitht.com`)"
      - "traefik.http.routers.api.entrypoints=${TRAEFIK_ENTRYPOINTS}"
      - "traefik.http.routers.api.tls.certresolver=${TRAEFIK_CERTRESOLVER}"
      - "traefik.http.services.api.loadbalancer.server.port=${API_INTERNAL_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks: [backend] # <-- same network

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE} -h localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [backend]

volumes:
  dbdata:
  storage:
  cache:

networks:
  backend: {} # <-- define shared network
